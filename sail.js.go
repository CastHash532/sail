package main

//go:generate go run sail.js_gen.go
const sailJS = "let reloadInProgress = false\nlet tty\nwindow.addEventListener(\"ide-ready\", (ev) => {\n    window.ide.workbench.onFileSaved((ev) => {\n        if (!ev.endsWith(\".sail/Dockerfile\")) {\n            return\n        }\n\n        if (reloadInProgress) {\n            alert(\"reload is still in progress\")\n            return\n        }\n        reloadInProgress = true\n\n        const srv = window.ide.workbench.terminalService\n\n        if (tty == null) {\n            tty = srv.createTerminal({\n                name: \"sail\",\n                isRendererOnly: true,\n            }, false)\n        } else {\n            tty.clear()\n        }\n        let oldTTY = srv.getActiveInstance()\n        srv.setActiveInstance(tty)\n\n        const ws = new WebSocket(\"ws://\" + location.host + \"/sail/api/v1/reload\")\n        ws.onmessage = (ev) => {\n            const msg = JSON.parse(ev.data)\n            const out = atob(msg.v).replace(/\\n/g, \"\\n\\r\")\n            tty.write(out)\n        }\n        ws.onclose = (ev) => {\n            if (ev.code == 1000) {\n                srv.setActiveInstance(oldTTY)\n                alert(\"success\")\n            } else {\n                alert(\"reload failed; please see logs in sail terminal\")\n            }\n            reloadInProgress = false\n        }\n    })\n})\n"
